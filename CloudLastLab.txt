1- create instance : 
			laungh instance 
			  name it <ITI-WepServer-1>
			  generate new key <lab2-key>
			  add secuirty group rule for HTTP ( anywhere)
	
	*ITI-WepServer-1*
	public ip: 54.90.198.32
	private ip : 172.31.16.102
	key-file-name : iti-key.pem 
	

2- create new volume for the instance 
			  volumes create volume
			   select volume type 
			   size 
			   you can leave other options as it is 
			   NOTE: for the sec instance choose subnet as the instance 
			   add tags name ITI-Webserver1-data
3- attach volume to instance 
	 click Action Button 
		attach volume
			select target instance 
		   	you can leave device name </dev/sdf>
		Attach
		
4- create file sys & mount point to the volume		   	 
		1- in the local terminal *ubuntu users*
			cd ~/Downloads
			chmod 400 iti-key.pem
			ssh -i iti-key.pem ec2-user@54.90.198.32
		2- in the instance terminal
			lsblk *to check for volume existence xvdf *
			sudo mkfs.xfs /dev/xvdf create file system for that volume 
			sudo mkdir /data 
			sudo mount /dev/xvdf /data/
			df -h 
			
5- create first 4 steps for <ITI-WepServer-2>
		*ITI-WepServer-2*
		public ip: 103.29.103.76
		private ip : 173.71.31.104
		ssh -i iti-key.pem ec2-user@103.29.103.76
		
6- install apache2 & php in the two instances 
	install apache2
		sudo yum install -y httpd 
		sudo systemctl start httpd
		sudo systemctl enable --now httpd
	install php
		sudo yum install php 
		sudo yum install amazon-linux-extras -y 
		sudo amazon-linux-extras enable php7.4
			sudo yum clean metadata
			sudo yum install php php-common php-pear -y
			sudo yum install php php-{pear,cgi,common,curl,mbstring,gd,mysqlnd,gettext,bcmath,json,xml,fpm,intl,zip,imap}

		
	 sudo systemctl restart httpd
			
7- create EFS shared
	services > storage > EFS 
	 	create file system
	 		name <ITI-WP-SHARED>
	 	click on target EFS
	 		under Network tab 
	 			save EFS ip's for 2 AZ
	 		us-east-1a	172.31.31.172
	 		us-east-1b 	172.31.32.114	
	 go to EC2 > secuirty group > create
	 			name it <EFS-SG> 
	 			add inbound rule 
	 				custom TCP 2049 0.0.0.0./0 *or idle your subnets*
	 go back to storage > efs 
	 			select target EFS 
	 				network > manage 
	 					select your secuirty group for the two subnets *add them to existed SG*
	 click Attatch (on top right)
	 		copy command for mount
	 		sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport fs-0a927a76ab24b846d.efs.us-east-1.amazonaws.com:/ efs
	 *on the two instances terminals* 
	 		sudo yum install nfs-utils 
	 		sudo mkdir /var/www/html/wp
	 		sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport fs-0a927a76ab24b846d.efs.us-east-1.amazonaws.com:/ /var/www/html/wp
	 		edit /var/www/html/wp/index.html from one terminal & see what the other displays 
	 			*EX:*
	 				in one of the two terminals 
	 				sudo vim  /var/www/html/wp/index.html
					add any html line to test 
					visti public ips to see the output 
			sudo rm  /var/www/html/wp/index.html after your done 
8- download wordpress in  the shared file 
	*on one of the two terminals*
		cd /var/www/html/wp
		sudo wget https://wordpress.org/latest.tar.gz
		sudo tar zxf latest.tar.gz
		
9- create shared amazon RDS 
	1- services > EC2 > secuirty groups
		create SG
			name <mysql-sg>
			inbound rules 
				custom TCP 3306 0.0.0.0/0 
	2- services > database > RDS
		create database 
			standard
			engine <MYSQL>
			templates <free tier>
			setting 
				db identifier <wp-shared-database>
				master username admin
				master password adminadmin
			instance configuration 
			connectivity 
				AZ
			secuirty group <mysql-sg> & discard the default 
			create
	3- under connectivety & secuirty tab
		copy Endpoint *we gonna use it to login remotly *
		wp-shared-database.cfzbjwfb9oqr.us-east-1.rds.amazonaws.com
	
	4-in one instance terminal 
		sudo yum install mysql
		mysql -h <Endpoint> -u <master-name> -p <master-pass> 
		mysql -h wp-shared-database.cfzbjwfb9oqr.us-east-1.rds.amazonaws.com -u admin -p 
		create database wordpress;
		
		for both instances:
			create user <username>@< instance private ip> identified by <pass>
			GRANT ALL PRIVILEGES ON wordpress.* To <username>@< instance private ip>;
			flush privileges;
